# 更多: https://docs.github.com/cn/actions/automating-builds-and-tests/building-and-testing-python
name: tag
on:
  push:
    tags:
    - 'v*'
env:
  main: main
  output: github-action

jobs:    
  release:
    runs-on: ubuntu-latest
    steps:
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{github.ref}}
        release_name: Release ${{github.ref}}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
  build-win:
    needs: release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: install python
      uses: actions/setup-python@v4
      with:
        # 最新版本的python
        python-version: '3.x'
    - name: install dependence
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if ( [System.IO.File]::Exists("requirements.txt")) 
        { 
          pip install -r requirements.txt 
        } 
    - name: make package
      run: |
        pyinstaller -F -w --clean -y --dist ./ --workpath /tmp ${{ env.main }}.py
    - name: upload
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{needs.release.outputs.upload_url}}
        asset_path: ${{github.workspace}}/${{ env.main }}.exe
        asset_name: ${{ env.output }}-win.exe
        asset_content_type: application/octet-stream
  build-mac:
    needs: release
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: install python
      uses: actions/setup-python@v4
      with:
        # 最新版本的python
        python-version: '3.x'
    - name: install dependence
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: make package
      run: |
        pyinstaller -F --clean -y --dist ./ --workpath /tmp ${{ env.main }}.py
        ls -l .
    - name: upload
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{needs.release.outputs.upload_url}}
        asset_path: ${{github.workspace}}/${{ env.main }}
        asset_name: ${{ env.output }}-macos
        asset_content_type: application/octet-stream
  build-linux:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install python
      uses: actions/setup-python@v4
      with:
        # 最新版本的python
        python-version: '3.x'
    - name: install dependence
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: make package
      run: |
        pyinstaller -F --clean -y --dist ./ --workpath /tmp ${{ env.main }}.py
    - name: upload
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{needs.release.outputs.upload_url}}
        asset_path: ${{github.workspace}}/${{ env.main }}
        asset_name: ${{ env.output }}-linux
        asset_content_type: application/octet-stream
